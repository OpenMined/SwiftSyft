// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: syft_proto/generic/pointers/v1/pointer_tensor.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct SyftProto_Generic_Pointers_V1_PointerTensor {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var objectID: SyftProto_Types_Syft_V1_Id {
    get {return _objectID ?? SyftProto_Types_Syft_V1_Id()}
    set {_objectID = newValue}
  }
  /// Returns true if `objectID` has been explicitly set.
  public var hasObjectID: Bool {return self._objectID != nil}
  /// Clears the value of `objectID`. Subsequent reads from it will return its default value.
  public mutating func clearObjectID() {self._objectID = nil}

  public var locationID: SyftProto_Types_Syft_V1_Id {
    get {return _locationID ?? SyftProto_Types_Syft_V1_Id()}
    set {_locationID = newValue}
  }
  /// Returns true if `locationID` has been explicitly set.
  public var hasLocationID: Bool {return self._locationID != nil}
  /// Clears the value of `locationID`. Subsequent reads from it will return its default value.
  public mutating func clearLocationID() {self._locationID = nil}

  public var objectIDAtLocation: SyftProto_Types_Syft_V1_Id {
    get {return _objectIDAtLocation ?? SyftProto_Types_Syft_V1_Id()}
    set {_objectIDAtLocation = newValue}
  }
  /// Returns true if `objectIDAtLocation` has been explicitly set.
  public var hasObjectIDAtLocation: Bool {return self._objectIDAtLocation != nil}
  /// Clears the value of `objectIDAtLocation`. Subsequent reads from it will return its default value.
  public mutating func clearObjectIDAtLocation() {self._objectIDAtLocation = nil}

  public var shape: SyftProto_Types_Syft_V1_Shape {
    get {return _shape ?? SyftProto_Types_Syft_V1_Shape()}
    set {_shape = newValue}
  }
  /// Returns true if `shape` has been explicitly set.
  public var hasShape: Bool {return self._shape != nil}
  /// Clears the value of `shape`. Subsequent reads from it will return its default value.
  public mutating func clearShape() {self._shape = nil}

  public var pointToAttr: String = String()

  public var garbageCollectData: Bool = false

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _objectID: SyftProto_Types_Syft_V1_Id? = nil
  fileprivate var _locationID: SyftProto_Types_Syft_V1_Id? = nil
  fileprivate var _objectIDAtLocation: SyftProto_Types_Syft_V1_Id? = nil
  fileprivate var _shape: SyftProto_Types_Syft_V1_Shape? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "syft_proto.generic.pointers.v1"

extension SyftProto_Generic_Pointers_V1_PointerTensor: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PointerTensor"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "object_id"),
    2: .standard(proto: "location_id"),
    3: .standard(proto: "object_id_at_location"),
    4: .same(proto: "shape"),
    5: .standard(proto: "point_to_attr"),
    6: .standard(proto: "garbage_collect_data"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._objectID)
      case 2: try decoder.decodeSingularMessageField(value: &self._locationID)
      case 3: try decoder.decodeSingularMessageField(value: &self._objectIDAtLocation)
      case 4: try decoder.decodeSingularMessageField(value: &self._shape)
      case 5: try decoder.decodeSingularStringField(value: &self.pointToAttr)
      case 6: try decoder.decodeSingularBoolField(value: &self.garbageCollectData)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._objectID {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._locationID {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._objectIDAtLocation {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    if let v = self._shape {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if !self.pointToAttr.isEmpty {
      try visitor.visitSingularStringField(value: self.pointToAttr, fieldNumber: 5)
    }
    if self.garbageCollectData != false {
      try visitor.visitSingularBoolField(value: self.garbageCollectData, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: SyftProto_Generic_Pointers_V1_PointerTensor, rhs: SyftProto_Generic_Pointers_V1_PointerTensor) -> Bool {
    if lhs._objectID != rhs._objectID {return false}
    if lhs._locationID != rhs._locationID {return false}
    if lhs._objectIDAtLocation != rhs._objectIDAtLocation {return false}
    if lhs._shape != rhs._shape {return false}
    if lhs.pointToAttr != rhs.pointToAttr {return false}
    if lhs.garbageCollectData != rhs.garbageCollectData {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
