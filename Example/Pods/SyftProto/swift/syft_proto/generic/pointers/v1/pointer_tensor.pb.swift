// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: syft_proto/generic/pointers/v1/pointer_tensor.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct SyftProto_Generic_Pointers_V1_PointerTensor {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var objectID: SyftProto_Types_Syft_V1_Id {
    get {return _storage._objectID ?? SyftProto_Types_Syft_V1_Id()}
    set {_uniqueStorage()._objectID = newValue}
  }
  /// Returns true if `objectID` has been explicitly set.
  public var hasObjectID: Bool {return _storage._objectID != nil}
  /// Clears the value of `objectID`. Subsequent reads from it will return its default value.
  public mutating func clearObjectID() {_uniqueStorage()._objectID = nil}

  public var locationID: SyftProto_Types_Syft_V1_Id {
    get {return _storage._locationID ?? SyftProto_Types_Syft_V1_Id()}
    set {_uniqueStorage()._locationID = newValue}
  }
  /// Returns true if `locationID` has been explicitly set.
  public var hasLocationID: Bool {return _storage._locationID != nil}
  /// Clears the value of `locationID`. Subsequent reads from it will return its default value.
  public mutating func clearLocationID() {_uniqueStorage()._locationID = nil}

  public var objectIDAtLocation: SyftProto_Types_Syft_V1_Id {
    get {return _storage._objectIDAtLocation ?? SyftProto_Types_Syft_V1_Id()}
    set {_uniqueStorage()._objectIDAtLocation = newValue}
  }
  /// Returns true if `objectIDAtLocation` has been explicitly set.
  public var hasObjectIDAtLocation: Bool {return _storage._objectIDAtLocation != nil}
  /// Clears the value of `objectIDAtLocation`. Subsequent reads from it will return its default value.
  public mutating func clearObjectIDAtLocation() {_uniqueStorage()._objectIDAtLocation = nil}

  public var shape: SyftProto_Types_Syft_V1_Shape {
    get {return _storage._shape ?? SyftProto_Types_Syft_V1_Shape()}
    set {_uniqueStorage()._shape = newValue}
  }
  /// Returns true if `shape` has been explicitly set.
  public var hasShape: Bool {return _storage._shape != nil}
  /// Clears the value of `shape`. Subsequent reads from it will return its default value.
  public mutating func clearShape() {_uniqueStorage()._shape = nil}

  public var pointToAttr: String {
    get {return _storage._pointToAttr}
    set {_uniqueStorage()._pointToAttr = newValue}
  }

  public var garbageCollectData: Bool {
    get {return _storage._garbageCollectData}
    set {_uniqueStorage()._garbageCollectData = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "syft_proto.generic.pointers.v1"

extension SyftProto_Generic_Pointers_V1_PointerTensor: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PointerTensor"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "object_id"),
    2: .standard(proto: "location_id"),
    3: .standard(proto: "object_id_at_location"),
    4: .same(proto: "shape"),
    5: .standard(proto: "point_to_attr"),
    6: .standard(proto: "garbage_collect_data"),
  ]

  fileprivate class _StorageClass {
    var _objectID: SyftProto_Types_Syft_V1_Id? = nil
    var _locationID: SyftProto_Types_Syft_V1_Id? = nil
    var _objectIDAtLocation: SyftProto_Types_Syft_V1_Id? = nil
    var _shape: SyftProto_Types_Syft_V1_Shape? = nil
    var _pointToAttr: String = String()
    var _garbageCollectData: Bool = false

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _objectID = source._objectID
      _locationID = source._locationID
      _objectIDAtLocation = source._objectIDAtLocation
      _shape = source._shape
      _pointToAttr = source._pointToAttr
      _garbageCollectData = source._garbageCollectData
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._objectID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._locationID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._objectIDAtLocation)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._shape)
        case 5: try decoder.decodeSingularStringField(value: &_storage._pointToAttr)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._garbageCollectData)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._objectID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._locationID {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._objectIDAtLocation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._shape {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if !_storage._pointToAttr.isEmpty {
        try visitor.visitSingularStringField(value: _storage._pointToAttr, fieldNumber: 5)
      }
      if _storage._garbageCollectData != false {
        try visitor.visitSingularBoolField(value: _storage._garbageCollectData, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: SyftProto_Generic_Pointers_V1_PointerTensor, rhs: SyftProto_Generic_Pointers_V1_PointerTensor) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._objectID != rhs_storage._objectID {return false}
        if _storage._locationID != rhs_storage._locationID {return false}
        if _storage._objectIDAtLocation != rhs_storage._objectIDAtLocation {return false}
        if _storage._shape != rhs_storage._shape {return false}
        if _storage._pointToAttr != rhs_storage._pointToAttr {return false}
        if _storage._garbageCollectData != rhs_storage._garbageCollectData {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
